// text
.h1 {
  @include adaptive-value("font-size", 72, 32, map-get($breakpoints, es));
  line-height: 0.8;
}

.h2 {
  @include adaptive-value("font-size", 36, 26, map-get($breakpoints, es));
  line-height: 1;
}

.h3 {
  font-weight: 600;
  @include adaptive-value("font-size", 28, 22, map-get($breakpoints, sm));
  line-height: 1;
}

.h4 {
  font-weight: 600;
  font-size: rem(18);
  line-height: 100%;
}

.txt {
  font-size: rem(15);
  line-height: 1.6;
}

.note {
  font-size: rem(14);
  line-height: 1.4;
}

.dd {
  font-size: rem(18);
  line-height: 1.5;
}

// Blocks
.main {
  padding-top: 60px;

  @include media(lg) {
    padding-top: 65px;
  }

  @include media(xl) {
    padding-top: 85px;
  }
}

// 2022
.max-container {
  margin: 0 auto;
  width: 100%;
  max-width: rem($maxWidthContainerMax);
}

// 1800
.medium-container {
  margin: 0 auto;
  width: 100%;
  max-width: rem($maxWidthContainerMedium);
  padding-top: 0;
  padding-bottom: 0;
  @include adaptive-value(
    "padding-left",
    $containerIndentation,
    $containerIndentationMin,
    map-get($breakpoints, es),
    map-get($breakpoints, sm)
  );
  @include adaptive-value(
    "padding-right",
    $containerIndentation,
    $containerIndentationMin,
    map-get($breakpoints, es),
    map-get($breakpoints, sm)
  );
}

// 1660
.min-container {
  margin: 0 auto;
  width: 100%;
  max-width: rem($maxWidthContainerMini);
  padding-top: 0;
  padding-bottom: 0;
  @include adaptive-value(
    "padding-left",
    $containerIndentation,
    $containerIndentationMin,
    map-get($breakpoints, es),
    map-get($breakpoints, sm)
  );
  @include adaptive-value(
    "padding-right",
    $containerIndentation,
    $containerIndentationMin,
    map-get($breakpoints, es),
    map-get($breakpoints, sm)
  );
}
._short-content {
  max-width: rem(1440);
}

.content-hidden {
  overflow: hidden;
}
// Animation-hover
._hover-up {
  transition: $transitionNormal;

  &:hover {
    @media (any-hover: hover) {
      transform: translateY(rem(-4));
      box-shadow: $depth2;
    }
  }
}
._hover-right {
  transition: $transitionNormal;

  &:hover {
    @media (any-hover: hover) {
      transform: translateX(rem(4));
    }
  }
}
._hover-scale {
  transition: $transitionNormal;
  &:hover {
    @media (any-hover: hover) {
      transform: scale(1.05);
    }
  }
}
._anim-upwards {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transform: translateY(rem(50));
  transition: $transitionHight ease-in-out;

  &._active {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    transform: translateY(0);
  }
}
._anim-transition-300 {
  transition: 0.3s ease-in-out;
}
._anim-transition-400 {
  transition: 0.4s ease-in-out;
}
._anim-transition-500 {
  transition: 0.5s ease-in-out;
}
._anim-transition-600 {
  transition: 0.6s ease-in-out;
}
._anim-transition-700 {
  transition: 0.7s ease-in-out;
}
._anim-delay-800 {
  transition: 0.8s ease-in-out;
}
._anim-delay-300 {
  transition-delay: 0.3s;
}
._anim-delay-400 {
  transition-delay: 0.4s;
}
._anim-delay-500 {
  transition-delay: 0.5s;
}
._anim-delay-600 {
  transition-delay: 0.6s;
}
._anim-delay-700 {
  transition-delay: 0.7s;
}
._anim-delay-800 {
  transition-delay: 0.8s;
}
._rotating {
  $speed: 25;
  animation: rotating $speed + s linear infinite;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}
@keyframes rotating {
  from {
    transform: perspective(1px) rotate(0deg);
  }
  to {
    transform: perspective(1px) rotate(360deg);
  }
}
