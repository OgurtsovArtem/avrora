.payment-popup {
  $media-height: 300px; // используется как ограничивающая высота для медиазапросов. Должна быть равна высоте попапа
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: $zIndexHight;
  transition: $transitionNormal;
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
  transition: $transitionLight;
  // &::after {
  //   content: "";
  //   position: absolute;
  //   top: 0;
  //   left: 0;
  //   width: 100%;
  //   height: 100%;
  //   background-color: rgba($color: #000000, $alpha: 0.3);
  //   z-index: -1;
  // }
  &._active {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
    .payment-popup__container {
      transform: scale(1);
    }
  }
  &__container {
    background: rgba(255, 255, 255, 1);
    box-shadow: 0px rem(4) rem(24) rgba(0, 0, 0, 0.25);
    border-radius: rem(8);
    transition: 0.8s;
    overflow-y: auto;
    overflow-x: hidden;
    z-index: $zIndexNormal;
    transform: scale(0);
    @include media(md) {
      max-width: rem(500);
    }

    @supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
      background: rgba(255, 255, 255, 0.4);
      backdrop-filter: blur(rem(10));
    }
    @media (max-width: (map-get($breakpoints, md)+px)) {
      width: 100%;
      height: 100%;
      border: none;
    }
    @media (max-height: $media-height) {
      width: 100%;
      height: 100%;
      border: none;
    }
  }

  &__close {
    position: absolute;
    top: 1.5%;
    right: 2%;
    width: rem(25);
    height: rem(25);
    &::after,
    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: rem(10);
      height: rem(10);
      height: 1px;
      background-color: $color-secondary;
    }
    &::after {
      transform: translate(-50%, -50%) rotate(45deg);
    }
    &::before {
      transform: translate(-50%, -50%) rotate(-45deg);
    }
  }
  &__content {
    @include adaptive-value("padding-top", 50, 20, map-get($breakpoints, es));
    @include adaptive-value(
      "padding-bottom",
      50,
      20,
      map-get($breakpoints, es)
    );
    @include adaptive-value("padding-left", 70, 20, map-get($breakpoints, es));
    @include adaptive-value("padding-right", 90, 40, map-get($breakpoints, es));
  }
  &__title {
    font-style: normal;
    font-weight: 600;
    line-height: 100%;
    @include adaptive-value("font-size", 18, 16, map-get($breakpoints, es));
    @include adaptive-value("margin-bottom", 40, 20, map-get($breakpoints, es));
  }
  &__text {
    font-style: normal;
    font-weight: 400;
    line-height: 160%;
    &:not(:last-child) {
      @include adaptive-value(
        "margin-bottom",
        20,
        10,
        map-get($breakpoints, es)
      );
    }
  }
  &__footnote {
    font-style: normal;
    font-weight: 600;
    color: $color-primary;
    line-height: 100%;
    @include adaptive-value("font-size", 18, 16, map-get($breakpoints, es));
    @include adaptive-value("margin-top", 33, 20, map-get($breakpoints, es));
  }
}
